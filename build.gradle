defaultTasks 'clean', 'todo', 'build', 'compileTutorialJava', 'dist'

apply plugin: 'java'

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

repositories {
  mavenCentral()
}

sourceSets {
  tutorial {
    java.srcDir file('src/tutorial/java')
  }
}

dependencies {
  testCompile 'junit:junit:4.11'
  tutorialCompile sourceSets.main.output
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint"
}

jar {
  from "readme.md"
  from "license.txt"
}

task packageSources(type: Jar) {
  from "readme.md"
  from "license.txt"
  from sourceSets.main.allSource
  classifier = 'sources'
}

task packageJavadoc(type: Jar, dependsOn: 'javadoc') {
  from javadoc.destinationDir
  classifier = 'javadoc'
}

artifacts {
  archives(packageJavadoc)
  archives(packageSources)
}

task dist << {
  ant.zip(destfile: "build/${project.name}-${version}_dist.zip") {
    fileset(dir: '.', includes: "readme.md,license.txt")
    fileset(dir: 'build/libs')
    zipfileset(dir: 'src/tutorial', prefix: 'tutorial')
  }
}

def searchMarker(tree, divider1, divider2, title, marker) {
  println divider1
  println "= search: " + title
  tree.each { file ->
    def found = false
    def number = 0
    file.eachLine { line ->
      number++
      if (line.toLowerCase().contains(marker)) {
        if (!found) {
          println divider2
          println "+ " + file
        }
        found = true
        println "- " + number + ": " + line
      }
    }
  }
}

task todo << {
  def divider1 = "========================================================================================================================"
  def divider2 = "------------------------------------------------------------------------------------------------------------------------"
  def searchTree = fileTree(dir: '.').exclude('.git/').exclude('.gradle/').exclude('.idea/').exclude('build/').exclude('classes/')
  searchMarker(searchTree, divider1, divider2, 'abort', '$' + '$$')  // abort, not allowed for building a release
  searchMarker(searchTree, divider1, divider2, 'todo', '$' + 'todo') // under construction, yet a release can still be built
  searchMarker(searchTree, divider1, divider2, 'note', '$' + 'note') // important comment
  println divider1
}
